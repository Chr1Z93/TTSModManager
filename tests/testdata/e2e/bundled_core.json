{
  "CameraStates": [],
  "ComponentTags": {},
  "CustomUIAssets": [],
  "Date": "",
  "DecalPallet": [],
  "Decals": [],
  "GameComplexity": "",
  "GameMode": "",
  "GameType": "",
  "Grid": {},
  "Hands": {},
  "Lighting": {},
  "LuaScript": "-- Bundled by luabundle {\"version\":\"1.6.0\"}\nlocal __bundle_require, __bundle_loaded, __bundle_register, __bundle_modules = (function(superRequire)\n\tlocal loadingPlaceholder = {[{}] = true}\n\n\tlocal register\n\tlocal modules = {}\n\n\tlocal require\n\tlocal loaded = {}\n\n\tregister = function(name, body)\n\t\tif not modules[name] then\n\t\t\tmodules[name] = body\n\t\tend\n\tend\n\n\trequire = function(name)\n\t\tlocal loadedModule = loaded[name]\n\n\t\tif loadedModule then\n\t\t\tif loadedModule == loadingPlaceholder then\n\t\t\t\treturn nil\n\t\t\tend\n\t\telse\n\t\t\tif not modules[name] then\n\t\t\t\tif not superRequire then\n\t\t\t\t\tlocal identifier = type(name) == 'string' and '\\\"' .. name .. '\\\"' or tostring(name)\n\t\t\t\t\terror('Tried to require ' .. identifier .. ', but no such module has been registered')\n\t\t\t\telse\n\t\t\t\t\treturn superRequire(name)\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tloaded[name] = loadingPlaceholder\n\t\t\tloadedModule = modules[name](require, loaded, register, modules)\n\t\t\tloaded[name] = loadedModule\n\t\tend\n\n\t\treturn loadedModule\n\tend\n\n\treturn require, loaded, register, modules\nend)(nil)\n__bundle_register(\"__root\", function(require, _LOADED, __bundle_register, __bundle_modules)\nrequire(\"core/Global\")\nend)\n__bundle_register(\"core/Global\", function(require, _LOADED, __bundle_register, __bundle_modules)\n\r\nfunction urldecode(str)\r\n  str = string.gsub(str, \"%%(%x%x)\",\r\n    function (h) return string.char(tonumber(h, 16)) end)\r\n  return str\r\nend\r\n\nend)\nreturn __bundle_require(\"__root\")",
  "LuaScriptState": "",
  "MusicPlayer": {},
  "Note": "",
  "ObjectStates": [],
  "SaveName": "",
  "Sky": "",
  "SnapPoints": [],
  "TabStates": {},
  "Table": "",
  "Turns": {},
  "VersionNumber": "",
  "XmlUI": ""
}
